pipeline {
    agent any
    environment {
        TEST_RESULT_FILE = 'test_result.txt'
        REPO_URL = 'https://github.com/kinhoreis2000/LuizHenriqueReis_CCTBAssignment2DevOps2'
        TESTING_SERVER = '54.196.250.107'
        PRODUCTION_SERVER = '<Production-Server-IP>'
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building Website...'
            }
        }

        stage('Deploy to Testing') {
            steps {
                echo 'Deploying to Testing Server....'
                sh """
                    ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@${TESTING_SERVER} "sudo rm -rf /var/www/html/*"
                    ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@${TESTING_SERVER} "git clone ${REPO_URL} /var/www/html"
                """
            }
        }

        stage('Run Selenium Tests') {
            steps {
                echo 'Running Selenium Tests...'
                script {
                    try {
                        sh 'cd selenium-tests && npm install'
                        sh 'node selenium-tests/test_form.js'
                        writeFile file: env.TEST_RESULT_FILE, text: 'true'
                    } catch (Exception e) {
                        writeFile file: env.TEST_RESULT_FILE, text: 'false'
                    }
                }
            }
        }

        stage('Deploy to Production') {
            when {
                expression {
                    def result = readFile(env.TEST_RESULT_FILE).trim()
                    return result == 'true'
                }
            }
            steps {
                echo 'Deploying to Production Server...'
                sh """
                    ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@$PRODUCTION_SERVER "sudo rm -rf /var/www/html/*"
                    ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@$PRODUCTION_SERVER "git clone ${REPO_URL} /var/www/html"
                """
            }
        }
    }
}
